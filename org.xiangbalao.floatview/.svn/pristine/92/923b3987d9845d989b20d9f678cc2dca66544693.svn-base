#include <stdio.h>
#include <stdlib.h>
#include <asm/ptrace.h>
#include <asm/user.h>
#include <asm/ptrace.h>
#include <sys/wait.h>
#include <sys/mman.h>
#include <dlfcn.h>
#include <dirent.h>
#include <unistd.h>
#include <string.h>
#include <getopt.h>
#include <android/log.h>
#include<string.h>
#include <stdio.h>
#include <stdlib.h>
#include <netinet/in.h>    // for sockaddr_in
#include <sys/types.h>    // for socket
#include <sys/socket.h>    // for socket
#include <stdio.h>        // for printf
#include <stdlib.h>        // for exit
#include <string.h>        // for bzero
#include <pthread.h>
#include <sys/errno.h>    // for errno
#include<jni.h>
#include <unistd.h>
#include <unistd.h>
#include <fcntl.h>
#include <android/log.h>
int main(int argc, char **argv) {
		FILE *pf=NULL;   //文件指针


		 int filelen=0;
		 int i=0;
		 char *buf;

	 pf=fopen("/data/data/com.gamedashi.dtcq.daota/files/shell.txt","r");   //以只读方式打开文件
	 if(pf==NULL){
		 return 0;
	 }else{

		  fseek(pf,0,SEEK_END);   //文件指针移到末尾
		  filelen=ftell(pf);   //获得文件当前指针位置，即为文件长度
		  rewind(pf);   //将文件指针移到开头，准备读取

		  buf=malloc(filelen+1);    //新建缓冲区，存储独处的数据
		  //将缓冲区的数据设置为0
		  for(i=0;i<filelen+1;i++){
			  buf[i]=0;


		  }
		   	  //读取文件
		  fread(buf,filelen,1,pf);
		  //关闭文件

		  fclose(pf);
		  printf(buf);
		  int result  =system(buf);
		  free(buf);


		 return result;


	 }

}
